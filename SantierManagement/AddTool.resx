<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCABkAMgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0m3SSXC4zmppbKaNSSvAqKxd4Zy2OAehNbVxctNB8jDn1FetJ
        NOx58bNanNybu5JqAjByav3EexGLcmsiRnLYGa1jTvsZSnbc1oJoguGIpszwnpjNYV07QITn361nrrEb
        qdjg84Nbwwcpaowni4wdpG/cTADg1W+04zzXKalrcyOBD0zg1Ede3LtZWwRye4rup5bUaTOCpmtJNxOr
        kffyCDWFrcUquZIZdp4+XPArnTf3BLYmfB96ls7hTITc73BHGSTXoU8C6etzzauYqquVq3zNfQ2nilfz
        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
</value>
  </data>
</root>